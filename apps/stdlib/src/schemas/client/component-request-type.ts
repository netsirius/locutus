// automatically generated by the FlatBuffers compiler, do not modify

import { ApplicationMessages, ApplicationMessagesT } from '../../schemas/client/application-messages';
import { RegisterComponent, RegisterComponentT } from '../../schemas/client/register-component';
import { UnregisterComponent, UnregisterComponentT } from '../../schemas/client/unregister-component';


export enum ComponentRequestType {
  NONE = 0,
  ApplicationMessages = 1,
  RegisterComponent = 2,
  UnregisterComponent = 3
}

export function unionToComponentRequestType(
  type: ComponentRequestType,
  accessor: (obj:ApplicationMessages|RegisterComponent|UnregisterComponent) => ApplicationMessages|RegisterComponent|UnregisterComponent|null
): ApplicationMessages|RegisterComponent|UnregisterComponent|null {
  switch(ComponentRequestType[type]) {
    case 'NONE': return null; 
    case 'ApplicationMessages': return accessor(new ApplicationMessages())! as ApplicationMessages;
    case 'RegisterComponent': return accessor(new RegisterComponent())! as RegisterComponent;
    case 'UnregisterComponent': return accessor(new UnregisterComponent())! as UnregisterComponent;
    default: return null;
  }
}

export function unionListToComponentRequestType(
  type: ComponentRequestType, 
  accessor: (index: number, obj:ApplicationMessages|RegisterComponent|UnregisterComponent) => ApplicationMessages|RegisterComponent|UnregisterComponent|null, 
  index: number
): ApplicationMessages|RegisterComponent|UnregisterComponent|null {
  switch(ComponentRequestType[type]) {
    case 'NONE': return null; 
    case 'ApplicationMessages': return accessor(index, new ApplicationMessages())! as ApplicationMessages;
    case 'RegisterComponent': return accessor(index, new RegisterComponent())! as RegisterComponent;
    case 'UnregisterComponent': return accessor(index, new UnregisterComponent())! as UnregisterComponent;
    default: return null;
  }
}
