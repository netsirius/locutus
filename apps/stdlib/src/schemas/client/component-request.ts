// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ApplicationMessages, ApplicationMessagesT } from '../../schemas/client/application-messages';
import { ComponentRequestType, unionToComponentRequestType, unionListToComponentRequestType } from '../../schemas/client/component-request-type';
import { RegisterComponent, RegisterComponentT } from '../../schemas/client/register-component';
import { UnregisterComponent, UnregisterComponentT } from '../../schemas/client/unregister-component';


export class ComponentRequest implements flatbuffers.IUnpackableObject<ComponentRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ComponentRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsComponentRequest(bb:flatbuffers.ByteBuffer, obj?:ComponentRequest):ComponentRequest {
  return (obj || new ComponentRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsComponentRequest(bb:flatbuffers.ByteBuffer, obj?:ComponentRequest):ComponentRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ComponentRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

componentRequestType():ComponentRequestType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ComponentRequestType.NONE;
}

componentRequest(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startComponentRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addComponentRequestType(builder:flatbuffers.Builder, componentRequestType:ComponentRequestType) {
  builder.addFieldInt8(0, componentRequestType, ComponentRequestType.NONE);
}

static addComponentRequest(builder:flatbuffers.Builder, componentRequestOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, componentRequestOffset, 0);
}

static endComponentRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createComponentRequest(builder:flatbuffers.Builder, componentRequestType:ComponentRequestType, componentRequestOffset:flatbuffers.Offset):flatbuffers.Offset {
  ComponentRequest.startComponentRequest(builder);
  ComponentRequest.addComponentRequestType(builder, componentRequestType);
  ComponentRequest.addComponentRequest(builder, componentRequestOffset);
  return ComponentRequest.endComponentRequest(builder);
}

unpack(): ComponentRequestT {
  return new ComponentRequestT(
    this.componentRequestType(),
    (() => {
      const temp = unionToComponentRequestType(this.componentRequestType(), this.componentRequest.bind(this));
      if(temp === null) { return null; }
      return temp.unpack()
  })()
  );
}


unpackTo(_o: ComponentRequestT): void {
  _o.componentRequestType = this.componentRequestType();
  _o.componentRequest = (() => {
      const temp = unionToComponentRequestType(this.componentRequestType(), this.componentRequest.bind(this));
      if(temp === null) { return null; }
      return temp.unpack()
  })();
}
}

export class ComponentRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public componentRequestType: ComponentRequestType = ComponentRequestType.NONE,
  public componentRequest: ApplicationMessagesT|RegisterComponentT|UnregisterComponentT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const componentRequest = builder.createObjectOffset(this.componentRequest);

  return ComponentRequest.createComponentRequest(builder,
    this.componentRequestType,
    componentRequest
  );
}
}
