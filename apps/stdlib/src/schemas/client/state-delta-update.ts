// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { State, StateT } from '../../schemas/client/state';
import { StateDelta, StateDeltaT } from '../../schemas/client/state-delta';


export class StateDeltaUpdate implements flatbuffers.IUnpackableObject<StateDeltaUpdateT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StateDeltaUpdate {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStateDeltaUpdate(bb:flatbuffers.ByteBuffer, obj?:StateDeltaUpdate):StateDeltaUpdate {
  return (obj || new StateDeltaUpdate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStateDeltaUpdate(bb:flatbuffers.ByteBuffer, obj?:StateDeltaUpdate):StateDeltaUpdate {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StateDeltaUpdate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

state(obj?:State):State|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new State()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

delta(obj?:StateDelta):StateDelta|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new StateDelta()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startStateDeltaUpdate(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addState(builder:flatbuffers.Builder, stateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stateOffset, 0);
}

static addDelta(builder:flatbuffers.Builder, deltaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, deltaOffset, 0);
}

static endStateDeltaUpdate(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): StateDeltaUpdateT {
  return new StateDeltaUpdateT(
    (this.state() !== null ? this.state()!.unpack() : null),
    (this.delta() !== null ? this.delta()!.unpack() : null)
  );
}


unpackTo(_o: StateDeltaUpdateT): void {
  _o.state = (this.state() !== null ? this.state()!.unpack() : null);
  _o.delta = (this.delta() !== null ? this.delta()!.unpack() : null);
}
}

export class StateDeltaUpdateT implements flatbuffers.IGeneratedObject {
constructor(
  public state: StateT|null = null,
  public delta: StateDeltaT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const state = (this.state !== null ? this.state!.pack(builder) : 0);
  const delta = (this.delta !== null ? this.delta!.pack(builder) : 0);

  StateDeltaUpdate.startStateDeltaUpdate(builder);
  StateDeltaUpdate.addState(builder, state);
  StateDeltaUpdate.addDelta(builder, delta);

  return StateDeltaUpdate.endStateDeltaUpdate(builder);
}
}
