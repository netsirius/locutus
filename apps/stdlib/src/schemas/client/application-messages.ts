// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ComponentKey, ComponentKeyT } from '../../schemas/client/component-key';
import { InboundComponentMsg, InboundComponentMsgT } from '../../schemas/client/inbound-component-msg';


export class ApplicationMessages implements flatbuffers.IUnpackableObject<ApplicationMessagesT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ApplicationMessages {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsApplicationMessages(bb:flatbuffers.ByteBuffer, obj?:ApplicationMessages):ApplicationMessages {
  return (obj || new ApplicationMessages()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsApplicationMessages(bb:flatbuffers.ByteBuffer, obj?:ApplicationMessages):ApplicationMessages {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ApplicationMessages()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

key(obj?:ComponentKey):ComponentKey|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ComponentKey()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

inbound(index: number, obj?:InboundComponentMsg):InboundComponentMsg|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new InboundComponentMsg()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

inboundLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startApplicationMessages(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, keyOffset, 0);
}

static addInbound(builder:flatbuffers.Builder, inboundOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, inboundOffset, 0);
}

static createInboundVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startInboundVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endApplicationMessages(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createApplicationMessages(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset, inboundOffset:flatbuffers.Offset):flatbuffers.Offset {
  ApplicationMessages.startApplicationMessages(builder);
  ApplicationMessages.addKey(builder, keyOffset);
  ApplicationMessages.addInbound(builder, inboundOffset);
  return ApplicationMessages.endApplicationMessages(builder);
}

unpack(): ApplicationMessagesT {
  return new ApplicationMessagesT(
    (this.key() !== null ? this.key()!.unpack() : null),
    this.bb!.createObjList<InboundComponentMsg, InboundComponentMsgT>(this.inbound.bind(this), this.inboundLength())
  );
}


unpackTo(_o: ApplicationMessagesT): void {
  _o.key = (this.key() !== null ? this.key()!.unpack() : null);
  _o.inbound = this.bb!.createObjList<InboundComponentMsg, InboundComponentMsgT>(this.inbound.bind(this), this.inboundLength());
}
}

export class ApplicationMessagesT implements flatbuffers.IGeneratedObject {
constructor(
  public key: ComponentKeyT|null = null,
  public inbound: (InboundComponentMsgT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const key = (this.key !== null ? this.key!.pack(builder) : 0);
  const inbound = ApplicationMessages.createInboundVector(builder, builder.createObjectOffsetList(this.inbound));

  return ApplicationMessages.createApplicationMessages(builder,
    key,
    inbound
  );
}
}
