// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Key, KeyT } from '../../schemas/host/key';
import { StateSummary, StateSummaryT } from '../../schemas/host/state-summary';


export class UpdateResponse implements flatbuffers.IUnpackableObject<UpdateResponseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpdateResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUpdateResponse(bb:flatbuffers.ByteBuffer, obj?:UpdateResponse):UpdateResponse {
  return (obj || new UpdateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUpdateResponse(bb:flatbuffers.ByteBuffer, obj?:UpdateResponse):UpdateResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UpdateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

key(obj?:Key):Key|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Key()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

summary(obj?:StateSummary):StateSummary|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new StateSummary()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startUpdateResponse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, keyOffset, 0);
}

static addSummary(builder:flatbuffers.Builder, summaryOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, summaryOffset, 0);
}

static endUpdateResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): UpdateResponseT {
  return new UpdateResponseT(
    (this.key() !== null ? this.key()!.unpack() : null),
    (this.summary() !== null ? this.summary()!.unpack() : null)
  );
}


unpackTo(_o: UpdateResponseT): void {
  _o.key = (this.key() !== null ? this.key()!.unpack() : null);
  _o.summary = (this.summary() !== null ? this.summary()!.unpack() : null);
}
}

export class UpdateResponseT implements flatbuffers.IGeneratedObject {
constructor(
  public key: KeyT|null = null,
  public summary: StateSummaryT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const key = (this.key !== null ? this.key!.pack(builder) : 0);
  const summary = (this.summary !== null ? this.summary!.pack(builder) : 0);

  UpdateResponse.startUpdateResponse(builder);
  UpdateResponse.addKey(builder, key);
  UpdateResponse.addSummary(builder, summary);

  return UpdateResponse.endUpdateResponse(builder);
}
}
